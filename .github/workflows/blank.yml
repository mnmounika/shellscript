name: CI 

on: [push]  # You can customize the trigger event(s) here

jobs:
  install-docker:
    runs-on: ubuntu-latest  # You can choose a different OS if needed
    env:
      CSR_countryName: "US"
      CSR_stateOrProvinceName: "Michigan"
      CSR_localityName: "Troy"
      CSR_organizationalUnitName: "Vehma International"
      CSR_commonName: "cse-plant1-uns.magna.global"
      MOSQUITTO_CONTAINER_NAME: "mosquitto"
      MOSQUITTO_ADMIN_USER: "admin-user"
      MOSQUITTO_ADMIN_PASSWORD: "xxxxx"
      CEDALO_ADMIN_USER: "admin"
      CEDALO_ADMIN_PASSWORD: "xxxxx"
      MOSQUITTO_HOSTNAME: "$CSR_commonName"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          # Install Docker using the official installation script
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER  # Add your user to the docker group
          docker version  # Verify Docker installation

      - name: Clean Up
        run: rm get-docker.sh

      - name: Generate certificate
        run: |
         echo "Cert creation starts" 
          openssl req \
          -nodes \
          -newkey rsa:2048 \
          -subj "/C=$CSR_countryName/ST=$CSR_stateOrProvinceName/L=$CSR_localityName/O=Magna International/OU=$CSR_organizationalUnitName/CN=$CSR_commonName" \
          -addext "keyUsage = digitalSignature, keyEncipherment" \
          -addext "extendedKeyUsage = serverAuth, clientAuth" \
          -addext "subjectAltName = DNS:$CSR_commonName" \
          -keyout $CSR_commonName.key \
          -out $CSR_commonName.csr
          echo "::$CSR_commonName.key got created"
          echo "::$CSR_commonName.csr got created"
          echo "pwd"
          pwd
          ls -lrt
          echo ls -lrt
          echo "Cert creation ends"
        shell: bash
      - name: Create folder certs
        run: |
           sudo mkdir -p /opt/mosquitto/certs && cp -R  /home/runner/work/shellscript/shellscript/$CSR_commonName.key /opt/mosquitto/certs/  
           ls /opt/mosquitto/certs
      - name: Create directory config,data
        run: |
           sudo mkdir -p /opt/mosquitto/config
           sudo mkdir -p /opt/mosquitto/data
           ls /opt/mosquitto/
           echo "Directory creation success"
        
      - name: Create file
        run: |
           sudo bash -c  'cat > /opt/mosquitto/config/mosquitto.conf << EOF
           per_listener_settings false
           plugin /usr/lib/mosquitto_dynamic_security.so
           plugin_opt_config_file /mosquitto/config/dynamic-security.json
           persistence true
           persistence_location /mosquitto/data
           log_dest topic
           log_dest stdout
           log_timestamp true
           log_timestamp_format %Y-%m-%dT%H:%M:%S%z
           log_type all
            
           #MQTT Listener
           listener 8883
           protocol mqtt
           certfile /mosquitto/certs/'"$CSR_commonName"'.pem
           keyfile /mosquitto/certs/'"$CSR_commonName"'.key
           cafile /mosquitto/certs/magna_global_fullchain.pemn
           # minimum version of the TLS protocol
           tls_version tlsv1.2
            
           #Websocket Listener
           listener 443
           protocol websockets
           certfile /mosquitto/certs/'"$CSR_commonName"'.pem
           keyfile /mosquitto/certs/'"$CSR_commonName"'.key
           cafile /mosquitto/certs/magna_global_fullchain.pem
           # minimum version of the TLS protocol
           tls_version tlsv1.2
           EOF'
           echo "Fie creation has been completed!!!"
        shell: bash

      - name: Create Mosquitto container
        run: |
           sudo docker run -d \
           --name $MOSQUITTO_CONTAINER_NAME \
           -p 8883:8883 \
           -p 443:443 \
           --volume /opt/mosquitto/certs:/mosquitto/certs \
           --volume /opt/mosquitto/data:/mosquitto/data \
           --volume /opt/mosquitto/config:/mosquitto/config \
           --restart unless-stopped  \
           eclipse-mosquitto
           echo "eclipse-mosquitto container creation success"
      - name: Create Mosquitto Admin User
        run: |
           sudo docker exec -t $MOSQUITTO_CONTAINER_NAME sh -c "mosquitto_ctrl dynsec init /mosquitto/config/dynamic-security.json $MOSQUITTO_ADMIN_USER $MOSQUITTO_ADMIN_PASSWORD"
      - name: Restart Mosquitto Container
        run: |
           sudo docker restart $MOSQUITTO_CONTAINER_NAME
      - name: Create Cedalo Container
        run: |
           sudo docker run -d \
           --volume /opt/mosquitto/certs/magna_global_fullchain.pem:/management-center/certs/magna_global_fullchain.pem \
           --name cedalo-management-center \
           -p 8088:8088 \
           --env CEDALO_MC_BROKER_ID=mosquitto \
           --env CEDALO_MC_BROKER_NAME=Mosquitto \
           --env CEDALO_MC_BROKER_URL="mqtts://${MOSQUITTO_HOSTNAME}:8883" \
           --env CEDALO_MC_BROKER_USERNAME=$MOSQUITTO_ADMIN_USER \
           --env CEDALO_MC_BROKER_PASSWORD=$MOSQUITTO_ADMIN_PASSWORD \
           --env CEDALO_MC_USERNAME=$CEDALO_ADMIN_USER \
           --env CEDALO_MC_PASSWORD=$CEDALO_ADMIN_PASSWORD \
           --env NODE_EXTRA_CA_CERTS=/management-center/certs/magna_global_fullchain.pem \
           --restart unless-stopped  \
           cedalo/management-center:2.3.13
           echo "cedalo-management-center container creation success"
